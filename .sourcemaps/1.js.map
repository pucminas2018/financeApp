{"version":3,"sources":["../../src/pages/reg-account/reg-account.module.ts","../../src/pages/reg-account/domain/reg-account.ts","../../src/pages/account-type/domain/account-type.ts","../../src/pages/list-reg-account/list-reg-account.ts","../../src/pages/reg-account/reg-account.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { RegAccountPage } from './reg-account';\n\n@NgModule({\n  declarations: [\n    RegAccountPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegAccountPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    RegAccountPage\n  ]\n})\nexport class RegAccountPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reg-account/reg-account.module.ts","import { AccountType } from './../../account-type/domain/account-type';\nimport { Account } from './../../signup/domain/account';\nexport class RegAccount {\n    \n    codConta: number;\t\n\ttituloConta: string;\t\n\tsaldoAtual: number;\n\tusuario: Account;\n\ttipoConta: AccountType;\n\n    constructor(){\n        this.usuario = new Account();\n        this.tipoConta = new AccountType;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reg-account/domain/reg-account.ts","import { Account } from './../../signup/domain/account';\nexport class AccountType {\n\n    codTipoConta: number;\n\tdescricao: string;\n\tusuario: Account;\n\n    constructor(){\n        this.usuario = new Account();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account-type/domain/account-type.ts","import { Component } from '@angular/core';\nimport { IonicPage, ModalController, NavController } from 'ionic-angular';\n\nimport { Item } from '../../models/item';\nimport { RegAccounts } from '../../providers/providers';\n\n@IonicPage()\n@Component({\n  selector: 'page-list-reg-acconut',\n  templateUrl: 'list-reg-account.html'\n})\nexport class ListRegAccountPage {\n  currentItems: Item[];\n\n  constructor(public navCtrl: NavController, public items: RegAccounts, public modalCtrl: ModalController) {\n    this.currentItems = this.items.query();\n  }\n\n  ionViewDidLoad() {\n  }\n\n  addItem() {\n    let addModal = this.modalCtrl.create('RegAccountPage');\n    addModal.onDidDismiss(item => {\n      if (item) {\n        this.items.add(item);\n      }\n    })\n    addModal.present();\n  }\n  deleteItem(item) {\n    this.items.delete(item);\n  }\n\n  openItem(item: Item) {\n    this.navCtrl.push('RegAccountPage', {\n      item: item\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list-reg-account/list-reg-account.ts","import { ListRegAccountPage } from './../list-reg-account/list-reg-account';\nimport { Api } from './../../providers/api/api';\nimport { RegAccount } from './domain/reg-account';\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController, NavParams } from 'ionic-angular';\n\nimport { User, RegAccounts } from '../../providers/providers';\nimport { MainPage } from '../pages';\n\n@IonicPage()\n@Component({\n  selector: 'page-reg-account',\n  templateUrl: 'reg-account.html'\n})\nexport class RegAccountPage {\n  regAccount: RegAccount = new RegAccount();\n  option: any = { \"Content-Type\": \"application/json\" }\n  _user: any;\n\n  private regAccountErrorString: string;\n  private regAccountSucessString: string;\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public navParams: NavParams,\n    public items: RegAccounts,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService,\n    public api: Api) {\n\n    this.regAccount = navParams.get('item') || items.defaultItem;\n    this.regAccountErrorString = \"Erro ao cadastrar uma conta. Verifique seus dados e tente novamente.\";\n    this.regAccountSucessString = \"Conta cadastrada com sucesso!\";\n  }\n\n  doRegAccount() {\n    this.regAccount.usuario = JSON.parse(localStorage.getItem('userLogged'));\n    this.regAccount.tipoConta.usuario = JSON.parse(localStorage.getItem('userLogged'));\n    this.regAccount.codConta = 0;\n    this.postRegAccount(this.regAccount).subscribe((resp) => {\n\n      let toast = this.toastCtrl.create({\n        message: this.regAccountSucessString,\n        duration: 6000,\n        position: 'top'\n      });\n      toast.present();\n      this.navCtrl.push(ListRegAccountPage);\n\n    }, (err) => {\n\n      this.navCtrl.push(MainPage);\n\n      let toast = this.toastCtrl.create({\n        message: this.regAccountErrorString,\n        duration: 6000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n\n  postRegAccount(accountInfo: any) {\n    let seq = this.api.post('conta', accountInfo, this.option).share();\n\n    seq.subscribe((res: any) => {\n      if (res.status == 'success') {\n        this._loggedIn(res);\n      }\n    }, err => {\n      console.error('ERROR', err);\n    });\n\n    return seq;\n  }\n\n  _loggedIn(resp) {\n    this._user = resp.user;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reg-account/reg-account.ts"],"sourceRoot":""}