{"version":3,"sources":["../../src/pages/account-type/account-type.module.ts","../../src/pages/account-type/domain/account-type.ts","../../src/pages/list-account-type/list-account-type.ts","../../src/pages/account-type/account-type.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { AccountTypePage } from './account-type';\n\n@NgModule({\n  declarations: [\n    AccountTypePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AccountTypePage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    AccountTypePage\n  ]\n})\nexport class AccountTypePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account-type/account-type.module.ts","import { Account } from './../../signup/domain/account';\nexport class AccountType {\n\n    codTipoConta: number;\n\tdescricao: string;\n\tusuario: Account;\n\n    constructor(){\n        this.usuario = new Account();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account-type/domain/account-type.ts","import { AccountType } from './../account-type/domain/account-type';\nimport { Api } from './../../providers/api/api';\nimport { Component } from '@angular/core';\nimport { IonicPage, ModalController, NavController } from 'ionic-angular';\n\nimport { Item } from '../../models/item';\nimport { AccountTypes } from '../../providers/providers';\n\n@IonicPage()\n@Component({\n  selector: 'page-list-account-type',\n  templateUrl: 'list-account-type.html'\n})\nexport class ListAccountTypePage {\n  accountType: AccountType = new AccountType();\n  currentItems: Item[];\n  option: any = {\"Content-Type\":\"application/json\"}\n  _user: any;\n\n  constructor(public navCtrl: NavController,  public items: AccountTypes, public modalCtrl: ModalController, public api: Api) {\n  }\n\nionViewDidLoad() {\n    this.accountType.usuario = JSON.parse(localStorage.getItem('userLogged'));\n    let seq = this.api.get('tipo-conta/todos/'+this.accountType.usuario.codUsuario, this.option).share();\n    \n        seq.subscribe((res: any) => {\n          if (res.status == 200) {\n            this.currentItems = JSON.parse(res._body);\n          }\n        }, err => {\n          console.error('ERROR', err);\n        });\n        return seq;\n  }\n\n  /**\n   * Prompt the user to add a new item. This shows our ItemCreatePage in a\n   * modal and then adds the new item to our data source if the user created one.\n   */\n  addItem() {\n    let addModal = this.modalCtrl.create('AccountTypePage');\n    addModal.onDidDismiss(item => {\n      if (item) {\n        this.items.add(item);\n      }\n    })\n    addModal.present();\n  }\n\n  /**\n   * Delete an item from the list of items.\n   */\n  deleteItem(item) {\n    this.items.delete(item);\n  }\n\n  /**\n   * Navigate to the detail page for this item.\n   */\n  openItem(item: Item) {\n    this.navCtrl.push('AccountTypePage', {\n      item: item\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list-account-type/list-account-type.ts","import { ListAccountTypePage } from './../list-account-type/list-account-type';\nimport { Api } from './../../providers/api/api';\nimport { AccountType } from './domain/account-type';\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController, NavParams } from 'ionic-angular';\n\nimport { User, CreditCards } from '../../providers/providers';\nimport { MainPage } from '../pages';\n\n@IonicPage()\n@Component({\n  selector: 'page-account-type',\n  templateUrl: 'account-type.html'\n})\nexport class AccountTypePage {\n  accountType: AccountType;\n  option: any = {\"Content-Type\":\"application/json\"}\n  _user: any;\n\n  private accountTypeErrorString: string;\n  private accountTypeSuccessString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public navParams: NavParams, \n    public items: CreditCards,\n    public translateService: TranslateService,\n    public api: Api) {\n\n    this.accountType = navParams.get('item') || items.defaultItem;\n      this.accountTypeErrorString = \"Erro ao salvar o tipo de conta.\";\n      this.accountTypeSuccessString = \"Tipo de conta salvo com sucesso!\";\n  }\n\n  doAccountType() {\n    this.accountType.usuario = JSON.parse(localStorage.getItem('userLogged'));\n    this.postAccountType(this.accountType).subscribe((resp) => {\n      let toast = this.toastCtrl.create({\n        message: this.accountTypeSuccessString,\n        duration: 6000,\n        position: 'top'\n      });\n      toast.present();\n      this.navCtrl.push(ListAccountTypePage);\n\n    }, (err) => {\n      this.navCtrl.push(AccountTypePage);\n      let toast = this.toastCtrl.create({\n        message: this.accountTypeErrorString,\n        duration: 6000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n\n  postAccountType(accountInfo: any) {\n    let seq = this.api.post('tipo-conta', accountInfo, this.option).share();\n\n    seq.subscribe((res: any) => {\n      if (res.status == 'success') {\n        this._loggedIn(res);\n      }\n    }, err => {\n      console.error('ERROR', err);\n    });\n\n    return seq;\n  }\n\n  _loggedIn(resp) {\n    this._user = resp.user;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account-type/account-type.ts"],"sourceRoot":""}