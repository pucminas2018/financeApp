{"version":3,"sources":["../../src/pages/account-type/account-type.module.ts","../../src/pages/account-type/account-type.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEC;AAcjD,IAAa,qBAAqB;IAAlC;IAAqC,CAAC;IAAD,4BAAC;AAAD,CAAC;AAAzB,qBAAqB;IAZjC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,sEAAe;SAChB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,sEAAe,CAAC;YACzC,4EAAe,CAAC,QAAQ,EAAE;SAC3B;QACD,OAAO,EAAE;YACP,sEAAe;SAChB;KACF,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AClBQ;AACa;AACmB;AAEZ;AAC1B;AAOpC,IAAa,eAAe;IAW1B,yBAAmB,OAAsB,EAChC,IAAU,EACV,SAA0B,EAC1B,SAAoB,EACpB,KAAkB,EAClB,gBAAkC;QAL3C,iBAWC;QAXkB,YAAO,GAAP,OAAO,CAAe;QAChC,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAW;QACpB,UAAK,GAAL,KAAK,CAAa;QAClB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAf3C,+CAA+C;QAC/C,iEAAiE;QACjE,6BAA6B;QAC7B,gBAAW,GAA0B;YACnC,SAAS,EAAE,EAAE;SACd,CAAC;QAYA,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC;QAC9D,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YAC9D,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC,CAAC;IACJ,CAAC;IAED,yDAAyD;IACzD,2CAAiB,GAAjB;QAAA,iBAaC;QAZC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC/C,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC;QAC9B,CAAC,EAAE,UAAC,GAAG;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC;YAC5B,mBAAmB;YACnB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,KAAI,CAAC,sBAAsB;gBACpC,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,sBAAC;AAAD,CAAC;AAvCY,eAAe;IAJ3B,wEAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;OACG;KACjC,CAAC;2EAYyC;QAC1B,sEAAI;QACC,iEAAe;QACf,yEAAS;QACb,6EAAW;QACA,YAAgB;AAuB5C;SAvCY,eAAe,gB","file":"24.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { AccountTypePage } from './account-type';\n\n@NgModule({\n  declarations: [\n    AccountTypePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AccountTypePage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    AccountTypePage\n  ]\n})\nexport class AccountTypePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account-type/account-type.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController, NavParams } from 'ionic-angular';\n\nimport { User, CreditCards } from '../../providers/providers';\nimport { MainPage } from '../pages';\n\n@IonicPage()\n@Component({\n  selector: 'page-account-type',\n  templateUrl: 'account-type.html'\n})\nexport class AccountTypePage {\n  // The account fields for the AccountType form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  accountType: { descricao: string } = {\n    descricao: '',\n  };\n\n  // Our translated text strings\n  private accountTypeErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public navParams: NavParams, \n    public items: CreditCards,\n    public translateService: TranslateService) {\n\n    this.accountType = navParams.get('item') || items.defaultItem;\n    this.translateService.get('ACCOUNT_TYPE_ERROR').subscribe((value) => {\n      this.accountTypeErrorString = value;\n    })\n  }\n\n  // Attempt to AccountTypePage in through our User service\n  doAccountTypePage() {\n    this.user.login(this.accountType).subscribe((resp) => {\n      this.navCtrl.push(MainPage);\n    }, (err) => {\n      this.navCtrl.push(MainPage);\n      // Unable to log in\n      let toast = this.toastCtrl.create({\n        message: this.accountTypeErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account-type/account-type.ts"],"sourceRoot":""}