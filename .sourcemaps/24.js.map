{"version":3,"sources":["../../src/pages/account-type/account-type.module.ts","../../src/pages/account-type/account-type.ts"],"names":[],"mappings":"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","file":"24.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { AccountTypePage } from './account-type';\n\n@NgModule({\n  declarations: [\n    AccountTypePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AccountTypePage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    AccountTypePage\n  ]\n})\nexport class AccountTypePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account-type/account-type.module.ts","import { ListAccountTypePage } from './../list-account-type/list-account-type';\nimport { Api } from './../../providers/api/api';\nimport { AccountType } from './domain/account-type';\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController, NavParams } from 'ionic-angular';\n\nimport { User, CreditCards } from '../../providers/providers';\nimport { MainPage } from '../pages';\n\n@IonicPage()\n@Component({\n  selector: 'page-account-type',\n  templateUrl: 'account-type.html'\n})\nexport class AccountTypePage {\n  accountType: AccountType;\n  option: any = {\"Content-Type\":\"application/json\"}\n  _user: any;\n\n  private accountTypeErrorString: string;\n  private accountTypeSuccessString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public navParams: NavParams, \n    public items: CreditCards,\n    public translateService: TranslateService,\n    public api: Api) {\n\n    this.accountType = navParams.get('item') || items.defaultItem;\n      this.accountTypeErrorString = \"Erro ao cadastra o tipo de conta. Verifique seus dados e tente novamente.\";\n      this.accountTypeSuccessString = \"Cadastro de tipo de conta realizado com sucesso!\";\n  }\n\n  doAccountTypePage() {\n    this.accountType.usuario = JSON.parse(localStorage.getItem('userLogged'));\n    this.postAccountType(this.accountType).subscribe((resp) => {\n      let toast = this.toastCtrl.create({\n        message: this.accountTypeSuccessString,\n        duration: 6000,\n        position: 'top'\n      });\n      toast.present();\n      this.navCtrl.push(MainPage);\n\n    }, (err) => {\n      this.navCtrl.push(MainPage);\n      let toast = this.toastCtrl.create({\n        message: this.accountTypeErrorString,\n        duration: 6000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n\n  postAccountType(accountInfo: any) {\n    let seq = this.api.post('login', accountInfo).share();\n\n    seq.subscribe((res: any) => {\n      if (res.status == 'success') {\n        this._loggedIn(res);\n      } else {\n      }\n    }, err => {\n      console.error('ERROR', err);\n    });\n\n    return seq;\n  }\n\n  _loggedIn(resp) {\n    this._user = resp.user;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account-type/account-type.ts"],"sourceRoot":""}